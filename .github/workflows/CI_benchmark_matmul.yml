name: benchmark_matmul

on:
  push:
    paths:
      - src/*.f90
      - benchmarks/matmul/matmul_mm.f90
      - benchmarks/matmul/matmul_mm_co.f90
      - benchmarks/matmul/matmul_mv.f90
      - benchmarks/matmul/matmul_mv_co.f90
  pull_request:
    paths:
      - src/*.f90
      - benchmarks/matmul/matmul_mm.f90
      - benchmarks/matmul/matmul_mm_co.f90
      - benchmarks/matmul/matmul_mv.f90
      - benchmarks/matmul/matmul_mv_co.f90
  # schedule:
  #   - cron: '0 0 1 * *'

jobs:

  Build:
    if: github.repository_owner == 'gha3mi'
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        toolchain:
          - {compiler: gcc}
          - {compiler: intel}
          - {compiler: intel-classic}
          - {compiler: nvidia-hpc}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Fortran Package Manager (fpm)
      uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install LAPACK and BLAS
      run: sudo apt-get install -y libblas-dev liblapack-dev

    - name: Setup Fortran Compiler
      uses: fortran-lang/setup-fortran@main
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}

    - name: matmul benchmark (matrix-matrix)
      run: |
        ulimit -s unlimited
        fpm @benchmark-matmul-mm-${{env.FC}}
      env:
        FC: ${{ steps.setup-fortran.outputs.fc }}

    - name: matmul benchmark (matrix-vector)
      run: |
        ulimit -s unlimited
        fpm @benchmark-matmul-mv-${{env.FC}}
      env:
        FC: ${{ steps.setup-fortran.outputs.fc }}
    
    - name: Install Python dependencies
      run: |
        python -m pip install pandas matplotlib

    - name: Results
      run: |
        cd benchmarks/matmul && python results/export.py matmul_mm_${{env.FC}}.data && cd ../..
        cd benchmarks/matmul && python results/export.py matmul_mv_${{env.FC}}.data && cd ../..
      env:
        FC: ${{ steps.setup-fortran.outputs.fc }}

    - name: Create Pull Request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FC: ${{ steps.setup-fortran.outputs.fc }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git fetch origin
        git switch -c results-${{env.FC}} origin/${{ github.event.repository.default_branch }}
        git add benchmarks/matmul/results/matmul_mm_${{env.FC}}*.png
        git add benchmarks/matmul/results/matmul_mv_${{env.FC}}*.png
        git add benchmarks/matmul/results/matmul_mm_${{env.FC}}*.html
        git add benchmarks/matmul/results/matmul_mv_${{env.FC}}*.html
        git commit -m "Update matmul results ${{env.FC}}"
        git push -u origin results-${{env.FC}} --force-with-lease
        default_branch="${{ github.event.repository.default_branch }}"
        gh pr create -B "$default_branch" -H "results-${{env.FC}}" --title "Update matmul results (${{env.FC}})" --body "Update matmul results (${{env.FC}})"